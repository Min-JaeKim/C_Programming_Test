# Python

## baek 3190 뱀 골드V

https://www.acmicpc.net/problem/3190



> python3 96ms



* 문제

  >  'Dummy' 라는 도스게임이 있다. 이 게임에는 뱀이 나와서 기어다니는데, 사과를 먹으면 뱀 길이가 늘어난다. 뱀이 이리저리 기어다니다가 벽 또는 자기자신의 몸과 부딪히면 게임이 끝난다.
  >
  > 게임은 NxN 정사각 보드위에서 진행되고, 몇몇 칸에는 사과가 놓여져 있다. 보드의 상하좌우 끝에 벽이 있다. 게임이 시작할때 뱀은 맨위 맨좌측에 위치하고 뱀의 길이는 1 이다. 뱀은 처음에 오른쪽을 향한다.
  >
  > 뱀은 매 초마다 이동을 하는데 다음과 같은 규칙을 따른다.
  > 
  > - 먼저 뱀은 몸길이를 늘려 머리를 다음칸에 위치시킨다.
  > - 만약 이동한 칸에 사과가 있다면, 그 칸에 있던 사과가 없어지고 꼬리는 움직이지 않는다.
  > - 만약 이동한 칸에 사과가 없다면, 몸길이를 줄여서 꼬리가 위치한 칸을 비워준다. 즉, 몸길이는 변하지 않는다.
  > 
  > 사과의 위치와 뱀의 이동경로가 주어질 때 이 게임이 몇 초에 끝나는지 계산하라.
  
* 입력

  > 첫째 줄에 보드의 크기 N이 주어진다. (2 ≤ N ≤ 100) 다음 줄에 사과의 개수 K가 주어진다. (0 ≤ K ≤ 100)
  >
  > 다음 K개의 줄에는 사과의 위치가 주어지는데, 첫 번째 정수는 행, 두 번째 정수는 열 위치를 의미한다. 사과의 위치는 모두 다르며, 맨 위 맨 좌측 (1행 1열) 에는 사과가 없다.
  >
  > 다음 줄에는 뱀의 방향 변환 횟수 L 이 주어진다. (1 ≤ L ≤ 100)
  >
  > 다음 L개의 줄에는 뱀의 방향 변환 정보가 주어지는데,  정수 X와 문자 C로 이루어져 있으며. 게임 시작 시간으로부터 X초가 끝난 뒤에 왼쪽(C가 'L') 또는 오른쪽(C가 'D')로 90도 방향을 회전시킨다는 뜻이다. X는 10,000 이하의 양의 정수이며, 방향 전환 정보는 X가 증가하는 순으로 주어진다.
  >
  > ```bash
  > 6
  > 3
  > 3 4
  > 2 5
  > 5 3
  > 3
  > 3 D
  > 15 L
  > 17 D
  > ```

* 출력

  > 첫째 줄에 게임이 몇 초에 끝나는지 출력한다.
  >
  > ```bash
  > 9
  > ```



```python
'''
1. 입력을 받고,
2. 벽에 부딪히거나 머리가 몸통에 부딪히지 않는 이상 무한반복합니다.
3. 머리를 먼저 늘리고,
4. 사과(-1로 배열에 표시)가 있을 경우 좌표를 0으로 바꿔줍니다.
5. 사과가 없을 경우에는 꼬리를 POP해줍니다.
6. 그리고 움직일 시간일 때는
7. 이동할 좌표의 방향을 바꿔줍니다.

'''

nr = [0, 1, 0, -1]      # 이동할 좌표
nc = [1, 0, -1, 0]
# D를 기준으로, →, ↓, ←, ↑

import sys
from collections import deque
n = int(input())
k = int(input())
arr = [[0] * (n) for _ in range(n)]
for _ in range(k):
    row, col = map(int, sys.stdin.readline().split())
    arr[row-1][col-1] = -1          # 사과가 있는 곳을 입력 받고, -1로 설정

l = int(input())
que = []
for _ in range(l):
    x, c = sys.stdin.readline().split()
    que.append([int(x), c])         # 움직일 시간과 움직일 방향 QUEUE에 입력

dc, dr, i, t = 0, 0, 0, 0           # 이동할 열좌표, 행좌표, 방향 변수, 시간
move = deque([[dr, dc]])            # 우선 현재 있는 위치를 DEQUE에 PUSH
while True:                         # 무한루프를 돌면서
    t += 1                          # 시간을 먼저 늘리고
    dr = dr + nr[i]                 # 머리를 이동
    dc = dc + nc[i]
    if 0 <= dr < n and 0 <= dc < n: # 만약 좌표가 지도상에 존재한다면
        pass                        # 계속 진행
    else:                           # 그렇지 않다면
        break                       # 탈출
    if [dr, dc] in move:            # 혹은 뱀의 몸통이 들어있는 DEQUE에
        break                       # 머리가 부딪혔다면 반복문 종료
    move.appendleft([dr, dc])       # 반복문 탈출이 없었다면 머리를 DEQUE의 맨 앞에 넣어줌
    if arr[dr][dc] == -1:           # 만약 머리가 사과의 위치에 있다면
        arr[dr][dc] = 0             # 사과를 없애줌
    else :                          # 사과가 없었다면
        move.pop()                  # 몸통이 안길어졌으므로 꼬리를 POP해줌
    if que and t == que[0][0]:      # 이동해야할 시간이 다가왔다면
        tmp, dir = que.pop(0)       # 이동해야할 방향 받고,
        if dir == 'D':              # D라면
            i = (i + 1) % 4         # 오른쪽으로 이동
        else:                       # 'L'이라면
            i = (i - 1) % 4         # 왼쪽으로 이동
print(t)


'''

10
4
1 2
1 3
1 4
1 5
4
6 D
7 D
8 D
9 D
OUTPUT : 9

'''
```

> 문제 이해 때문에 한참 걸렸던 문제..
>
> 이동했을 때 시간을 늘리는 건지, 시간을 늘리고 나서 이동을 하는 건지,
>
> 벽에 부딪히고 나서 시간을 출력하는 건지, 부딪힐 당시에 시간을 출력하는 건지 너무 헷갈렸다...
>
> 문제 이해 능력을 기르는 게 중요할듯



* 모범답안

  ```python
  
  ```
  
  > 

