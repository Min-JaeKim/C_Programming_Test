# python

## baek 5545 최고의 피자 실버3

https://www.acmicpc.net/problem/5545

> python3 76ms
>
> pypy3 120ms



* 문제

  > 상근이는 근처 피자 가게에서 매일 저녁으로 피자를 배달해 먹는다. 주머니 사정이 얇아진 상근이는 이번 달부터는 "최고의 피자"를 구매하려고 한다. 최고의 피자란, 피자 가게에서 주문할 수 있는 피자 중 1원당 열량이 가장 높은 피자를 말한다. 최고의 피자는 여러 종류가 있을 수도 있다.
  >
  > 이 피자 가게는 토핑 N개에서 여러 종류를 선택해서 주문할 수 있다. 같은 종류의 토핑을 2개 이상 선택할 수는 없다. 또, 토핑을 전혀 선택하지 않을 수도 있다.
  >
  > 선택한 토핑은 도우 위에 올라간다. 도우의 가격은 A원이고, 토핑의 가격은 모두 B원이다. 피자의 가격은 도우와 토핑의 가격의 합계가 된다. 즉, 토핑을 k종류 (0 ≤ k ≤ N) 선택했다면, 피자의 가격은 A + B*k원이 된다. 피자의 열량은 도우와 토핑의 열량의 합이다.
  >
  > 도우의 가격, 토핑의 가격, 그리고 도우와 각 토핑의 열량 값이 주어졌을 때, 최고의 피자의 1원 당 열량을 구하는 프로그램을 작성하시오.

* 입력

  > 첫째 줄에 토핑의 종류의 수 N(1 ≤ N ≤ 100)이 주어진다. 둘째 줄에는 도우의 가격 A와 토핑의 가격 B가 주어진다. (1 ≤ A, B ≤ 1000) 셋째 줄에는 도우의 열량 C가 주어진다. (1 ≤ C ≤ 10000) 다음 줄부터 N개 줄에는 각 토핑의 열량 Di가 한 줄에 하나씩 주어진다. (1 ≤ Di ≤ 10000)
  >
  > ```python
  > 3
  > 12 2
  > 200
  > 50
  > 300
  > 100
  > ```
  >
  > 

* 출력

  > 첫째 줄에 최고의 피자의 1원 당 열량을 출력한다. 소수점 이하는 버리고 정수 값으로 출력한다.
  >
  > ```python
  > 37
  > ```



```python
import sys
input = sys.stdin.readline

n = int(input())
a, b = map(int, input().split())    # 도우가격, 토핑가격
c = int(input())        # 도우열량
arr = []                # 토핑 열량 넣을 리스트
for _ in range(n):      # 토핑 반복문
    t = int(input())
    arr.append(t)
arr.sort(reverse=True)  # 토핑 열량을 내림차순 정렬

res = c//a              # 초기 결과값은 토핑없는 도우의 1원당 열량
for i in arr:           # 토핑 열량을 반복하며
    c += i              # 지금까지의 열량 + 현재 토핑 열량
    a += b              # 지금까지의 가격 + 토핑 가격
    if c//a < res:      # 1원당 측정 값이 최댓값보다 작다면
        break           # 끝
    else:               # 그게 아니라면
        res = c//a      # 최댓값 갱신

print(res)
```

> 걍,, 그리디..



* 모범답안

  ```python
  from itertools import*
  n,a,b,c,*d=map(int,open(0).read().split())
  print(max((v+c)//(a+i*b)for i,v in enumerate([0,*accumulate(sorted(d)[::-1])])))
  ```

  > 미쳤네

